version: '2.1'

volumes:
  rabbit-data:
  kafka-data:
  zk-data:
  zk-datalog:

services:
  api-service:
    image: demo/api-service:latest
    ports:
      - 8080:80
    environment:
      SPRING_PROFILES_ACTIVE: contained

  customer-service:
    image: demo/customer-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: contained
  
  email-service:
    image: demo/email-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: contained
  
  email-dispatch:
    image: demo/email-dispatch:latest
    environment:
      SPRING_PROFILES_ACTIVE: contained

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit-data:/var/lib/rabbitmq

  mongo:
    image: mongo:latest
    hostname: mongo
    ports:
      - "27017:27017"

  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - zk-data:/data
      - zk-datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.1.2
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    depends_on:
      - zoo1